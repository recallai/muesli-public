name: Build and Release

on:
    push:
        branches:
            - "release" # Trigger on pushes to production branch
    workflow_dispatch: # Allow manual triggering
        inputs:
            release_type:
                description: "Release type"
                required: true
                default: "release"
                type: choice
                options:
                    - "draft"
                    - "prerelease"
                    - "release"

jobs:
    build:
        strategy:
            matrix:
                os: [windows-latest, macos-latest]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build:prod

            # Windows-specific build
            - name: Build Windows app
              if: matrix.os == 'windows-latest'
              run: npm run dist
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # macOS-specific build
            - name: Build macOS app
              if: matrix.os == 'macos-latest'
              run: npm run dist
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CSC_IDENTITY_AUTO_DISCOVERY: false # Disable code signing for now

            # Upload artifacts for each platform
            - name: Upload Windows artifacts
              if: matrix.os == 'windows-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: windows-build
                  path: |
                      release/*.exe
                      release/*.zip
                      release/*.msi
                  retention-days: 30

            - name: Upload macOS artifacts
              if: matrix.os == 'macos-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: macos-build
                  path: |
                      release/*.dmg
                      release/*.zip
                      release/*.pkg
                  retention-days: 30

    release:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/release' || github.event_name == 'workflow_dispatch'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: release-artifacts

            - name: Display structure of downloaded files
              run: find release-artifacts -type f -name "*" | head -20

            - name: Get release version
              id: tag
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                    echo "tag_name=v$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
                  else
                    # For release branch, use package.json version with current date/time
                    VERSION=$(node -p "require('./package.json').version")
                    echo "tag_name=v${VERSION}-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
                  fi

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.tag.outputs.tag_name }}
                  name: Muesli ${{ steps.tag.outputs.tag_name }}
                  body: |
                      ## Muesli Meeting Recorder ${{ steps.tag.outputs.tag_name }}

                      ### üì¶ Downloads

                      **Windows:**
                      - `.exe` - Windows installer (NSIS)
                      - `*-win.zip` - Portable Windows app

                      **macOS:**
                      - `.dmg` - macOS disk image
                      - `*-mac.zip` - Portable macOS app

                      ### üöÄ Installation

                      1. Download the appropriate file for your operating system
                      2. Run the installer or extract the portable version
                      3. Follow the setup instructions

                      ### üìù Changelog

                      - Enhanced Electron Builder integration
                      - Improved CSS loading and styling
                      - Better error handling for meetings data
                      - Cross-platform compatibility improvements

                      ---

                      Built with ‚ù§Ô∏è using Electron Builder
                  draft: ${{ github.event.inputs.release_type == 'draft' || github.event_name != 'workflow_dispatch' }}
                  prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}
                  files: |
                      release-artifacts/**/*.exe
                      release-artifacts/**/*.zip
                      release-artifacts/**/*.dmg
                      release-artifacts/**/*.pkg
                      release-artifacts/**/*.msi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
